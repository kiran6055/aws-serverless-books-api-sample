AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'

Parameters:
  Stage:
    Type: String
    Description: Stage to deploy resources to
    AllowedValues:
      - staging
      - production

Conditions:
  IsProduction: !Equals [ !Ref Stage, production ]

Globals:
  Api:
    OpenApiVersion: 3.0.1 # to avoid default stage creation
  Function:
    Runtime: nodejs14.x
    MemorySize: 128
    Timeout: 5
    Tracing: Active
    Tags:
      project: my-project
      environment: !Ref Stage

Resources:
  # Your other resources here

  GetAllBooks:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${Stage}-books-get-all'
      CodeUri: ./src/books/get-all/
      Handler: index.handler
      AutoPublishAlias: !Ref Stage
      DeploymentPreference:
        Type: !If [IsProduction, Linear10PercentEvery1Minute, AllAtOnce]
        Alarms:
          - !Ref GetAllBooksAliasErrorMetricGreaterThanZeroAlarm
      Environment:
        Variables:
          TABLE: !Ref BooksTable
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref BooksTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /books
            Method: get
            RestApiId:
              Ref: BooksApi

  CreateBook:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${Stage}-books-create'
      CodeUri: ./src/books/create/
      Handler: index.handler
      AutoPublishAlias: !Ref Stage
      DeploymentPreference:
        Type: !If [IsProduction, Linear10PercentEvery1Minute, AllAtOnce]
        Hooks:
          PreTraffic: !Ref CreateBookPreTraffic
        Alarms:
          - !Ref CreateBookAliasErrorMetricGreaterThanZeroAlarm
      Environment:
        Variables:
          TABLE: !Ref BooksTable
      Policies:
        - DynamoDBWritePolicy:
            TableName: !Ref BooksTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /books
            Method: post
            RestApiId:
              Ref: BooksApi
            Auth:
              AuthorizationScopes:
                - email
                - !If
                  - IsProduction
                  - !Ref 'AWS::NoValue'
                  - aws.cognito.signin.user.admin
              Authorizer: CognitoAuth

  # Your other resources here

Outputs:
  ApiEndpoint:
    Description: "API endpoint"
    Value: !Sub "https://${BooksApi}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/"
  UserPoolId:
    Description: "User Pool Id"
    Value: !Ref CognitoUserPool
  UserPoolClientId:
    Description: "User Pool Client Id"
    Value: !Ref UserPoolClient
  BooksTable:
    Description: "DynamoDB table where we will be storing books"
    Value: !Ref BooksTable

